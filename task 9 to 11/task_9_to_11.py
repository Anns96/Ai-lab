# -*- coding: utf-8 -*-
"""task 9 to 11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11tBSoMHmOJv2-G1CHFjpjkLC_4gmwtUu
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_csv("netflix_titles.csv")
print("data loaded\n")
print("first 5 rows:\n", df.head())
print("\n info:")
print(df.info())
print("\n null values:\n", df.isnull().sum())
print("\n type:\n", df['type'].value_counts())
df['rating'].fillna(df['rating'].mode()[0], inplace=True)
df['release_year'].fillna(df['release_year'].median(), inplace=True)
df['duration'].fillna("0 min", inplace=True)
def parse_duration(val):
    if "season" in val:
        return int(val.split()[0]) * 60
    elif "min" in val:
        return int(val.split()[0])
    else:
        return 0
df['duration_mins'] = df['duration'].apply(parse_duration)
le_type = LabelEncoder()
df['type_encoded'] = le_type.fit_transform(df['type'])
df_clean = df[['release_year', 'duration_mins', 'type_encoded']]
df_clean = df_clean.astype('int')
print("Pre-processing done. data types:\n", df_clean.dtypes)
X = df_clean[['release_year', 'duration_mins']]
y = df_clean['type_encoded']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print(" data Split: train =", len(X_train), " test =", len(X_test))
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
acc = accuracy_score(y_test, y_pred)
print(f" acccuracy= {acc * 100:.2f}%")
sns.countplot(x=y_pred)
plt.title("predicted Distribution (0=movie, 1=tv show)")
plt.show()